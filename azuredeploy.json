{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                    "description": "Admin username used when provisioning virtual machines"
                  }
                },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",    
            "metadata": {      
              "description": "Admin password used when provisioning virtual machines"     
            }     
          },    
        "virtualNetworkName": {     
            "type": "string",      
            "defaultValue": "github-classroom",      
            "metadata": {      
              "description": "Virtual Network"      
            }     
          },     
        "authenticationType": {      
            "type": "string",      
            "defaultValue": "password",      
            "allowedValues": [      
              "password",     
              "sshPublicKey"     
            ],     
            "metadata": {     
              "description": "Whether to use a password or ssh key (Linux only) as authentication"     
            }     
          },
      
        "sshPublicKey": {     
            "type": "string",    
            "defaultValue": "",     
            "metadata": {      
              "description": "The public ssh key to use for authentication (Linux only)"      
            }      
          },      

        "loadBalancerType": {      
            "type": "string",      
            "defaultValue": "internal",     
            "allowedValues": [     
              "internal",     
              "external"     
            ],      
            "metadata": {     
              "description": "Setup the load balancer internal or external.  If you are setting up Elasticsearch on an external endpoint you will need to secure your nodes with a product like Elasticsearch Shield"     
            }     
          },
        "vmClientNodeCount": {
            "type": "int",      
            "defaultValue": 1,      
            "allowedValues": [      
              0,      
              1,      
              2,      
              3,      
              4,    
              5,    
              6,     
              7,     
              8,     
              9     
            ],      
            "metadata": {      
              "description": "Number of Elasticsearch client nodes to provision (Setting this to zero puts the data nodes on the load balancer)"      
            }      
          },             
        "Classroom_ClusterName": {    
            "type": "string",      
            "defaultValue": "elasticsearch",      
            "metadata": {     
              "description": "The name of the Elasticsearch cluster"      
            }     
          },
        "skuName": {
            "type": "string",
            "defaultValue": "F1",
            "allowedValues": [
            "F1",
            "D1",
            "B1",
            "B2",
            "B3",
            "S1",
            "S2",
            "S3",
            "P1",
            "P2",
            "P3",
            "P4"
            ],
            "metadata": {
            "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            }
        },
        "skuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "metadata": {
            "description": "Describes plan's instance count"
            }
        },
        "cacheSKUName": {
            "type": "string",
            "allowedValues": [
            "Basic",
            "Standard"
            ],
            "defaultValue": "Basic",
            "metadata": {
            "description": "The pricing tier of the new Azure Redis Cache."
            }
        },
        "cacheSKUFamily": {
            "type": "string",
            "allowedValues": [
            "C"
            ],
            "defaultValue": "C",
            "metadata": {
            "description": "The family for the sku."
            }
        },
        "cacheSKUCapacity": {
            "type": "int",
            "allowedValues": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
            ],
            "defaultValue": 0,
            "metadata": {
            "description": "The size of the new Azure Redis Cache instance. "
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
            "description": "Location for all resources."
            }
        }
    },
    "variables": {
      "hostingPlanName": "[concat('hostingplan', uniqueString(resourceGroup().id))]",
      "webSiteName": "[concat('webSite', uniqueString(resourceGroup().id))]",
      "cacheName": "[concat('cache', uniqueString(resourceGroup().id))]"
    },
    "resources": [
      {
        "apiVersion": "2015-08-01",
        "name": "[variables('hostingPlanName')]",
        "type": "Microsoft.Web/serverfarms",
        "location": "[parameters('location')]",
        "tags": {
          "displayName": "HostingPlan"
        },
        "sku": {
          "name": "[parameters('skuName')]",
          "capacity": "[parameters('skuCapacity')]"
        },
        "properties": {
          "name": "[variables('hostingPlanName')]"
        }
      },
      {
        "apiVersion": "2015-08-01",
        "name": "[variables('webSiteName')]",
        "type": "Microsoft.Web/sites",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Web/serverFarms/', variables('hostingPlanName'))]",
          "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
        ],
        "tags": {
          "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "empty",
          "displayName": "Website"
        },
        "properties": {
          "name": "[variables('webSiteName')]",
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
        },
        "resources": [
          {
            "apiVersion": "2015-08-01",
            "type": "config",
            "name": "appsettings",
            "dependsOn": [
              "[concat('Microsoft.Web/Sites/', variables('webSiteName'))]",
              "[concat('Microsoft.Cache/Redis/', variables('cacheName'))]"
            ],
            "properties": {
              "CacheConnection": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('cacheName')), '2015-08-01').primaryKey)]"
            }
          }
        ]
      },
      {
        "name": "[variables('cacheName')]",
        "type": "Microsoft.Cache/Redis",
        "location": "[parameters('location')]",
        "apiVersion": "2015-08-01",
        "dependsOn": [],
        "tags": {
          "displayName": "cache"
        },
        "properties": {
          "sku": {
            "name": "[parameters('cacheSKUName')]",
            "family": "[parameters('cacheSKUFamily')]",
            "capacity": "[parameters('cacheSKUCapacity')]"
          }
        }
      },
      {
        "name": "string",
        "type": "Microsoft.DBforPostgreSQL/servers",
        "apiVersion": "2017-12-01",
        "sku": {
          "name": "string",
          "tier": "Basic",
          "capacity": "integer",
          "size": "string",
          "family": "string"
        },
        "properties": {
          "version": "string",
          "sslEnforcement": "string",
          "storageProfile": {
            "backupRetentionDays": "integer",
            "geoRedundantBackup": "string",
            "storageMB": "integer",
            "storageAutogrow": "string"
          },
          "createMode": "string"
        },
        "location": "string",
        "tags": {},
        "resources": []
      }
    ]
  }